#include <bits/stdc++.h>
#include <bitset>
using namespace std;
struct node{
    node* chi[2];
    node(){
        for(int i=0; i<2; i++){
            chi[i]=nullptr;
        }
    }
};
struct trie{
    node* root;
    trie(){
        root= new node ;
    }
    void in(int val){
        node* cur=root;
        bitset<32>bs;
        for(int i=31; i>=0; i--){
            if(val==(val|(1<<i))){
                bs[i]=1;
            }else{
                bs[i]=0;
            }
        }
        for(int i=31; i>=0; i--){
            if(bs[i]==1){
                if(cur->chi[1]==nullptr){
                    cur->chi[1]=new node;
                }
                cur=cur->chi[1];
            }else{
                if(cur->chi[0]==nullptr){
                    cur->chi[0]=new node;
                }
                cur=cur->chi[0];
            }
        }
    }
    int qu(int val){
        node *cur=root;
        bitset<32>bs;
        bitset<32>ans;
        for(int i=31; i>=0; i--){
            if(val==(val|(1<<i))){
                bs[i]=1;
            }else{
                bs[i]=0;
            }
        }
        bs=~bs;
        for(int i=31; i>=0; i--){
            if(bs[i]==1){
                if(cur->chi[1]==nullptr){
                    cur=cur->chi[0];
                    ans[i]=0;
                }else{
                    cur=cur->chi[1];
                    ans[i]=1;
                }
            }else{
                if(cur->chi[0]==nullptr){
                    cur=cur->chi[1];
                    ans[i]=1;
                }else{
                    cur=cur->chi[0];
                    ans[i]=0;
                }
            }
        }
        bs=~bs;
        ans^=bs;
        return ans.to_ulong();
    }
};
int main() {
    ios::sync_with_stdio(0); cin.tie(nullptr); cout.tie(nullptr);
    int n;
    cin >> n;
    vector<int>udon(n);
    trie t;
    for(int i=0; i<n; i++){
        cin >> udon[i];
        t.in(udon[i]);
    }
    int ma=0;
    for(int i=0; i<n; i++){
        ma=max(ma,t.qu(udon[i]));
    }
    cout << ma << '\n';
    return 0;
}
